["Five Languages:"
 {
  "HTTP Routing (https://eclipse.org/Xtext/documentation/206_httprouting.html)"
  [[POST ["employee"] (ctrl/add-employee request/params)]
   [GET ["employee" :id] (ctrl/get-employee :id)]
   [GET ["employees"] (ctrl/get-employees request/params)]
   [GET ["employees" :field :value] (ctrl/get-employees-by :field :value)]
   [PUT ["employee" :id] (ctrl/update-employee :id request/params)]
   [DELETE ["employee" :id] (ctrl/delete-employee :id)]]

  "Build Language (https://eclipse.org/Xtext/documentation/203_builddsl.html)"
  [
   (!= :project (file 'example-project'))
   (!= :source (file :project 'src'))
   (!= :target (file :project 'target'))
   (!= :jar (file :project 'result' 'foo.jar'))
   {
    Zip [[Compile]
         (zip :target :jar)
         ]
    Compile [[Clean]
             (javac (list :source) :target)
             ]
    Run [[Zip]
         (!= :classpath (new-classpath :jar))
         (!= :class (load-class :classpath "helloworld.HelloWorld"))
         (run-main :class)
         ]
    Clean [
           (delete-contents :target)
           (delete :jar)
           ]
    }
   ]

  "Domain Definition Language (https://eclipse.org/Xtext/documentation/204_mongodb.html)"
  [
   {
    Artist {
            name text
            albums */Album
            }
    Album {
           title text
           year int
           tracks */Track
           }
    Track {
           title text
           duration duration
           }
    }
   {
    Student {
             id int
             first-name text
             last-name text
             enrollment */Section
             }
    Course {
            code int
            name text
            description text
            credits [int {:min 1}]
            prerequisites */Course
            department Department
            }
    Department {
                code int
                name text
                }
    Instructor {
                id int
                first-name text
                last-name text
                department Department
                available-to-instruct */Course
                }
    Section {
             id int
             term Term
             building Building
             time Time
             course Course
             instructor Instructor
             room-number int
             }
    Term {
          year [int {:min 1900 :max 2100}]
          semester [text "FALL" "SPRING" "SUMMER"]
          }
    Building {
              name text
              address Address
              rooms */int
              }
    Address {
             street1 text
             street2 ?/text
             city text
             state [text "WI" "MN" ...]
             zip int
             }
    }
   ]

  "Query Language"
  [{Select * From quantity_limit}
   {Select {list_count (count *)} From form.formulary_load Where (file_load_id = :file-load-id)}
   { Select w/*
    From [l/form.formulary_load
          {Inner-Join w/form.formulary_webdav
           On (l/formulary_load_id = w/formulary_load_id)}]
    Where (and (l/management_status = "A")
            (l/effective_date <= :effective-date)
            (w/version = :version)
            (w/rollup_drug_db = :rollup-drug-db)
            (l/publisher = :publisher)
            (l/list_id = :list-id)
            (l/type = :type)
            (l/sub_type is null))
    Order-By [{l/effective_date desc}]}
   { Select *
    From form.rfs_load
    Where (or (modified_date > :min-mod-date) (and (modified_date = :mod-date) (rfs_load_id > :rfs-load-id)))
    Order-By [modified_date rfs_load_id]
    Limit :limit}
   ]

  "Tortoise (https://eclipse.org/Xtext/documentation/208_tortoise.html)"
  [
   {square [[:length]
            [(for :x (1 ... 4)
               (forward :length)
               (turn-right 90))
             ]]}
   [
    (!= :length 150)
    (!= :diagonal (:length * (sqrt 2)))
    (!= :line-width 2)
    (square :length)
    (turn-right 45)
    (!= :line-color "blue")
    (forward :diagonal)
    (turn-left 90)
    (!= :line-color "red")
    (forward (:diagonal / 2))
    (turn-left 90)
    (forward (:diagonal / 2))
    (turn-left 90)
    (!= :line-color "blue")
    (forward :diagonal)
    ]
   ]}
 ]
